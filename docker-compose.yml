services:
  bot:
    build: ./bot
    container_name: aiogram
    # volumes:
    #   - ./bot:/app
    environment:
      - TOKEN=${TOKEN}
      - RABBIT_URL=${RABBIT_URL}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  app:
    build: .
    container_name: fastapi
    ports:
      - "8000:8000"
    # volumes:
    #   - .:/app
    environment:
      - RABBIT_URL=${RABBIT_URL}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

networks:
  app-network:
    driver: bridge

# docker-compose up -d
